@model IEnumerable<SistemaGestionNotas.Models.ViewModels.CursoConAlumnosViewModel>

@{
    ViewData["Title"] = "Gestión de Inscripciones por Curso";
}

<div class="card shadow border-0">

    <img id="logoUniversidad" src="@Url.Content("~/images/logotransparenteblack.png")" alt="Logo" style="display: none;" />

    <div class="card-header bg-light py-3">
        <div class="d-flex justify-content-between align-items-center flex-wrap gap-2">
            <div>
                <h4 class="mb-0 text-primary">
                    <i class="fas fa-clipboard-list me-2"></i>@ViewData["Title"]
                </h4>
                <small class="text-muted ms-1">Universidad Tech</small>
            </div>
            <div class="d-flex gap-2">
                <button class="btn btn-outline-danger" onclick="exportTableToPDF('Reporte de Inscripciones')">
                    <i class="fas fa-file-pdf me-2"></i> PDF
                </button>
            </div>
        </div>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table id="coursesTable" class="table table-striped table-hover" style="width:100%">
                <thead>
                    <tr>
                        <th>Código del Curso</th>
                        <th>Nombre</th>
                        <th>Sección</th>
                        <th class="text-center">Alumnos Inscritos</th>
                        <th class="text-center">Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var curso in Model)
                    {
                        <tr data-alumnos='@Json.Serialize(curso.NombresAlumnos)'>
                            <td>@curso.Codigo</td>
                            <td>@curso.Nombre</td>
                            <td>@curso.Seccion</td>
                            <td class="text-center">@curso.NombresAlumnos.Count</td>
                            <td class="text-center">
                                <div class="btn-group" role="group">
                                    <a asp-action="Edit" asp-route-id="@curso.CursoId" class="btn btn-warning btn-sm" title="Gestionar alumnos">
                                        <i class="fas fa-users-cog"></i>
                                    </a>
                                    <a asp-action="Details" asp-route-id="@curso.CursoId" class="btn btn-info btn-sm text-white" title="Ver listado">
                                        <i class="fas fa-eye"></i>
                                    </a>
                                    <a asp-action="PrintDetails" asp-route-id="@curso.CursoId" target="_blank" class="btn btn-dark btn-sm" title="Imprimir listado de alumnos">

                                        <i class="fas fa-print"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.28/jspdf.plugin.autotable.min.js"></script>

    <script>

        $(document).ready(function () {
            $('#coursesTable').DataTable({
                "dom": '<"row mb-3"<"col-sm-12 col-md-6"l><"col-sm-12 col-md-6"f>>' +
                    '<"row"<"col-sm-12"tr>>' +
                    '<"row"<"col-sm-12 col-md-5"i><"col-sm-12 col-md-7"p>>',
                language: {
                    url: 'https://cdn.datatables.net/plug-ins/1.13.7/i18n/es-ES.json'
                }
            });
        });


        function exportTableToExcel(tableID, filename = '') {
            const table = document.getElementById(tableID).cloneNode(true);

            const actionsHeader = table.querySelector("thead th:last-child");
            if (actionsHeader) actionsHeader.remove();
            table.querySelectorAll("tbody tr").forEach(row => {
                const lastCell = row.querySelector("td:last-child");
                if (lastCell) lastCell.remove();
            });
            const wb = XLSX.utils.table_to_book(table, { sheet: "Sheet1" });
            XLSX.writeFile(wb, filename + ".xlsx");
        }


        
        async function exportTableToPDF(reportTitle, filename = 'ReporteDeInscripciones') {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF({ orientation: 'portrait', unit: 'mm', format: 'a4' });
            const universityName = "Universidad Tech";
            const pageWidth = doc.internal.pageSize.getWidth();

            
            try {
                const logo = document.getElementById('logoUniversidad');
                const logoWidth = 45;
                const logoHeight = 45;
                const logoX = 15;
                const logoY = 5;

                if (logo.complete && logo.naturalWidth !== 0) {
                    doc.addImage(logo, 'PNG', logoX, logoY, logoWidth, logoHeight);
                } else {
                    await new Promise((resolve, reject) => {
                        logo.onload = () => {
                            doc.addImage(logo, 'PNG', logoX, logoY, logoWidth, logoHeight);
                            resolve();
                        };
                        logo.onerror = () => {
                            console.error("No se pudo cargar el logo para el PDF.");
                            reject();
                        };
                    });
                }
            } catch (error) {
                console.error("Error al añadir el logo:", error);
            }

            
            doc.setFontSize(18);
            doc.setFont("helvetica", "bold");
            doc.text(reportTitle, pageWidth / 2, 25, { align: 'center' });

            doc.setFontSize(12);
            doc.setFont("helvetica", "normal");
            doc.text(universityName, pageWidth / 2, 33, { align: 'center' });


           
            const head = [['Código', 'Nombre del Curso', 'Sección', 'Alumno Inscrito']];
            const body = [];

            const table = $('#coursesTable').DataTable();

            table.rows({ search: 'applied' }).nodes().each(function (rowNode) {
                const row = $(rowNode);
                const cells = row.find('td');
                const codigo = cells.eq(0).text();
                const nombre = cells.eq(1).text();
                const seccion = cells.eq(2).text();

                const alumnos = JSON.parse(row.attr('data-alumnos') || '[]');

                if (alumnos.length === 0) {
                    body.push([codigo, nombre, seccion, 'Sin alumnos inscritos']);
                } else {
                    
                     alumnos.forEach(alumno => body.push([codigo, nombre, seccion, alumno]));
                }
            });

            
            doc.autoTable({
                head: head,
                body: body,
                startY: 45,
                theme: 'grid',
                styles: { fontSize: 10 },

                headStyles: {
                    fillColor: [32, 201, 151],
                    textColor: [255, 255, 255],
                    fontStyle: 'bold',
                    halign: 'center'
                },
                alternateRowStyles: {
                    fillColor: [245, 245, 245]
                }
            });

            doc.save(filename + ".pdf");
        }
    </script>
}